package Registro;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;

import Registro.Consumo;

public class ArregloConsumo {
	public class ArregloAtenciones {
		//  Atributos privados
		private ArrayList <Consumo> consumo;
		//  Constructor
		public ArregloAtenciones() {
			consumo = new ArrayList <Consumo> ();
			cargarConsumo();
		}
		//  Operaciones públicas básicas
		public void adicionar(Consumo x) {
			consumo.add(x);
		}
		public int tamaño() {
			return consumo.size();
		}
		public Consumo obtener(int i) {
			return consumo.get(i);
		}
		public Consumo buscar(int codigoAtencion) {
			for (int i=0; i<tamaño(); i++)
				if (obtener(i).getCodigoAtencion() == codigoAtencion)
					return obtener(i);
			return null;
		}
		public void eliminar(Consumo x) {
			consumo.remove(x);
		} 
		public void grabarAtenciones() {
			try {
				PrintWriter pw;
				String linea;
				Consumo x;
				pw = new PrintWriter(new FileWriter("atenciones.txt"));
				for (int i=0; i<tamaño(); i++) {
					x = obtener(i);
					linea =	x.getCodigoAtencion() + ";" +
							x.getCodigoHospedaje() + ";" +
							x.getFechaAtencion() + ";" +
							x.getHoraAtencion() + ";" +
							x.getApagar() + ";" +
							x.getEstado();
					pw.println(linea);
				}
				pw.close();
			}
			catch (Exception e) {
			}
		}
		private void cargarConsumo() {
			try {
				BufferedReader br;
				String linea, fechaAtencion, horaAtencion;
				String[] s;
				int codigoAtencion, codigoHospedaje, estado;
				double totalPagar;
				br = new BufferedReader(new FileReader("atenciones.txt"));
				while ((linea=br.readLine()) != null) {
					s = linea.split(";");
					codigoAtencion = Integer.parseInt(s[0].trim());
					codigoHospedaje = Integer.parseInt(s[1].trim());
					fechaAtencion = s[2].trim();
					horaAtencion = s[3].trim();
					totalPagar = Double.parseDouble(s[4].trim());
					estado = Integer.parseInt(s[5].trim());
					adicionar(new Consumo(codigoAtencion, codigoHospedaje,
							               fechaAtencion, horaAtencion, totalPagar, estado));
				}
				br.close();
			}
			catch (Exception e) {	
			}
		}
		//  Operaciones públicas complementarias
		public int codigoCorrelativo() {
			if (tamaño() == 0)
				return 40001;
			else
				return obtener(tamaño()-1).getCodigoAtencion() + 1;
		}
		public boolean procedeCodigoPacientes(int codigoPaciente) {
			for (int i=tamaño()-1; i>=0; i--)
				if (obtener(i).getCodigoPaciente() == codigoPaciente  &&  obtener(i).getEstado() == 0)
					return false;
			return true;
		}
		
}
}
